name: deploy-fly
on:
  push:
    branches:
      - main
jobs:
  exists:
    name: Check app exists
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.exists.outputs.exists }}
    steps:
      - name: Checkout Step
        uses: actions/checkout@v3
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: check app exists
        id: exists
        run: |
          EXISTS=1
          APP_NAME=$(flyctl apps list | grep 'fp2024' | cut -d' ' -f1)
          if [[ -z $APP_NAME ]]; then
            EXISTS=0
          fi
          echo "exists=${EXISTS}" >> $GITHUB_OUTPUT
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  create:
    #TODO: create db attach it and set aws password during creation
    needs: exists
    if: always() && needs.exists.outputs.exists != 1
    name: Create app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Step
        uses: actions/checkout@v3
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Create App
        run: flyctl apps create fp2024
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Deploy App
        run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      - name: Set APP_KEY
        run: flyctl secrets set APP_KEY=${{ secrets.LARAVEL_APP_KEY }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy:
    needs: exists
    if: always() && needs.exists.outputs.exists == 1
    name: Deploy app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Step
        uses: actions/checkout@v3
      - name: Setup flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy App
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
